#trigger:
#- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  sln: 'NWebsec-CI.sln'
  versionSuffix: '' #overridden for branches before pack.
  nugetConnection: 'NWebsec Nuget'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: build
    projects: '$(sln)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: test
    projects: $(sln)
    nobuild: true
    arguments: '--configuration $(buildConfiguration)'

- script: echo "##vso[task.setvariable variable=versionSuffix]--version-suffix $(Build.BuildID).$(Build.SourceBranchName)"
  condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'buildmaster'))
  displayName: 'Version suffix'

- script: dotnet pack $(sln) --configuration $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory) $(versionSuffix)
  displayName: 'Pack'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: nupkgs

- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: 'custom'
    arguments: '-ApiKey $(nugetApiKey) -Source https://api.nuget.org/v3/index.json -SkipDuplicate'

#- task: DotNetCoreCLI@2
#  condition: and(succeeded(), in(variables['Build.SourceBranchName'], 'buildmaster', 'azure-pipelines'))
#  displayName: 'NuGet push'
#  inputs:
#    command: push
#    arguments: '--skip-duplicate --api-key $(nugetApiKey)'
#    nuGetFeedType: external
#    externalEndPoint: $(nugetConnection)
    #versioningScheme: byEnvVar
    #versionEnvVar: version

    #condition: (succeeded(),in($(Build.SourceBranchName), 'master', 'dev'))